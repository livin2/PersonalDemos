<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
  "
>


    <context:component-scan base-package="com.vipsys.action"></context:component-scan>
    <context:component-scan base-package="com.vipsys.dao"></context:component-scan>
    <context:component-scan base-package="com.vipsys.sevice"></context:component-scan>
    <context:component-scan base-package="com.vipsys.dto"></context:component-scan>

    <context:annotation-config/>
    <aop:aspectj-autoproxy proxy-target-class="true"/>

    <!--配置使springframwork引入jdbc.properties文件，然后就可以通过${mysql.driverClassName}来得到jdbc.properties文件中对应的值了-->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:jdbc.properties"/>
    </bean>
    <!-- 设置数据源连接字符串 -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${sqlserver.driverClassName}"></property>
        <property name="url" value="${sqlserver.url}"></property>
    </bean>

    <!-- hibernate 管理-->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <!-- 引用上面设置的数据源 -->
        <property name="dataSource">
            <ref bean="dataSource"/>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.SQLServer2008Dialect</prop>
                <prop key="hibernate.autoReconnect">true</prop>
                <prop key="hibernate.connection.autocommit">true</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
                <!-- 解决session关闭问题 -->
                <prop key="hibernate.enable_lazy_load_no_trans">true</prop>
                <prop key="hibernate.connection.url">jdbc:sqlserver://localhost;database=webapp</prop>
                <prop key="hibernate.connection.driver_class">com.microsoft.sqlserver.jdbc.SQLServerDriver</prop>
                <!--<prop key="hibernate.connection.url">jdbc:sqlserver://localhost;database=constellationInfo</prop>-->
                <!--<prop key="hibernate.connection.driver_class">com.microsoft.sqlserver.jdbc.SQLServerDriver</prop>-->

                <!-- spring 和 hibernate 整合的时候默认就是使用线程的，下面这一行不用写，写了反而要报错，此外 sessionFaction，不能使用openSession
                 既不能保存数据到数据库，还不能实现事务功能
                 -->
                <!--<prop key="current_session_context_class">thread</prop>-->
            </props>
        </property>
        <property name="mappingLocations">
            <list>
                <value>classpath:com/vipsys/model/PurchaseHis.hbm.xml</value>
                <value>classpath:com/vipsys/model/VipInfo.hbm.xml</value>
                <value>classpath:com/vipsys/model/User.hbm.xml</value>
            </list>
        </property>
        <property name="annotatedClasses">
            <list>
                <value>com.vipsys.model.PurchaseHis</value>
                <value>com.vipsys.model.VipInfo</value>
                <value>com.vipsys.model.User</value>
            </list>
        </property>

    </bean>
    <!-- 用注解来实现事务管理 -->
    <bean id="txManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <tx:annotation-driven transaction-manager="txManager"/>

</beans>